cd /Users/ron/websites/mana-running
nano src/app/schools/page.tsximport { createSupabaseServerClient } from '@/lib/supabase/server'
import Link from 'next/link'

interface School {
  id: string
  name: string
  city: string
  state: string
  athletes: { count: number }
  results: { count: number }
}

export default async function SchoolsPage() {
  const supabase = createSupabaseServerClient()

  // Get schools with athlete and result counts
  const { data: schools, error } = await supabase
    .from('schools')
    .select(`
      id,
      name,
      city,
      state,
      athletes(count),
      results(count)
    `)
    .order('name', { ascending: true }) as { data: School[] | null; error: any }

  if (error) {
    console.error('Error fetching schools:', error)
    return <div>Error loading schools</div>
  }

  const processedSchools: School[] = schools?.map(school => ({
    id: school.id,
    name: school.name,
    city: school.city,
    state: school.state,
    athletes: { count: school.athletes?.count ?? 0 },
    results: { count: school.results?.count ?? 0 }
  })) || []

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold text-gray-900 mb-6">Schools</h1>
      
      <div className="bg-white rounded-lg shadow-md p-6">
        <div className="overflow-x-auto">
          <table className="min-w-full">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Name
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Location
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Athletes
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Results
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {processedSchools.map((school) => (
                <tr key={school.id} className="hover:bg-gray-50">
                  <td className="px-6 py-4 whitespace-nowrap">
                    <Link
                      href={`/schools/${school.id}`}
                      className="text-blue-600 hover:text-blue-800 hover:underline"
                    >
                      {school.name}
                    </Link>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {school.city}, {school.state}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {school.athletes.count}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {school.results.count}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
      
      {processedSchools.length === 0 && (
        <div className="text-center py-12">
          <h2 className="text-xl text-gray-600 mb-4">No schools found</h2>
          <p className="text-gray-500">No schools are registered yet.</p>
        </div>
      )}
    </div>
  )
}
